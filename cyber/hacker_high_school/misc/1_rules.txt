                What to Hack
When Hacking anything, you need to set up some ground rules.
The language and concepts to know what you're actually hacking.
The *Scope is the word used to describe the total possible operating
environment, which is every interaction that the thing you want to hack has.

* Scoping
    The scope is made up of 3 classes that subdivides to 5 channels.
    - Classes define an area of study, investigation, or operation.
    - Channels are common terms for the ways you interact with assets.
    
^- Physical Security [PHYSEC]: Human and Physical

^- Spectrum Security [SPECSEC]: Wireless

^- Communication Security [COMSEC]: Telecommunications and Data Networks.

#+ An Asset can be anything that has value to the owner. It either be
physical property or an intellectual property. 

#+ Dependencies are the things beyond the asset owner's ability to
provide independently.

#+ The goal of *Security is separation between an *asset as well as its
dependencies and any threat to them. Thus *Security is a function of
Separation.
There are 4 ways to create this separation:
- Move the asset to create a barrier between it and the threats.
- Change the threat to a harmless state.
- Destroy the asset. [!Recommended]

#+ When we're hacking, we look for places where interactions with the
target are possible and where they are not. The more porosity there is,
the more likely a hacker can make changes and control what they want.

                Feed Your Head: Porosity
How pores can be located, classified and determined in the hacking process.

- Visibility: If an asset is visible, it can be attacked, but if it is
not visible, it can be targeted - though it could be discovered.
Security doesn't have to last forever, just longer than anything else 
that might notice it's gone.
* Means, Motive and Opportunity to attack a visible asset.

- Access: The number of different places where interactions can occur
to the outside of the scope with another entity within the scope.
Trust is both a security hole and a common replacement for authentication.

- Trust: When an entity accepts free interaction with another entity within
the scope.

#- Exercises